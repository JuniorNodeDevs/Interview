#!/usr/bin/node --harmony

'use strict';

var program = require('commander')
  , semver = require('semver')
  , version = require('../package.json').version;

program
  .version(version)
  .option('-s, --start <number>', 'Number to start with, defaults to 1', Number)
  .option('-e, --end <number>', 'Number to count to, defaults to 100', Number)
  .option('-p, --prime', 'also output \'prime\' on prime numbers')
  .parse(process.argv);

if(isNaN(program.start) && program.start !== undefined) {
  console.error('Invalid arguments, expected starting number');
  console.error('found: ' + program.start);
  process.exit(1);
}
if(isNaN(program.end) && program.end !== undefined) {
  console.error('Invalid arguments, expected ending number');
  console.error('found: ' + program.end);
  process.exit(1);
}

var s = program.start || 1
  , e = program.end || 100
  , prime = program.prime;

if (e <= s) {
  console.error('Invalid arguments, expected start number greater than end');
  console.error('start: ' + s);
  console.error('end: ' + e);
  process.exit(1);
}

var fizzbuzz
  , config = {
    s: s,
    e: e,
    p: prime
  };

var handleError = function(errMsg) {
  console.error(errMsg);
  process.exit(1);
}

if (semver.gt(process.version.replace('v', ''), '0.11.0')) {
  fizzbuzz = require('../lib/yield');
} else {
  fizzbuzz = require('../lib/standard');
}

fizzbuzz(config, console.log, handleError);